<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sSubScrBeam</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>oSubScreenSuit</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(sprite_index, -1, x, y);
draw_set_color(c_white);
draw_set_font(fontMenuTiny);
draw_set_alpha(1);
if (global.item[10]) {
    draw_sprite(sSubScrButton, global.cbeam, x - 28, y - 46);
    draw_text(x - 20, y - 47, "CHARGE");
}
if (global.item[11]) {
    draw_sprite(sSubScrButton, global.ibeam, x - 28, y - 37);
    draw_text(x - 20, y - 38, "ICE");
}
if (global.item[12]) {
    draw_sprite(sSubScrButton, global.wbeam, x - 28, y - 28);
    draw_text(x - 20, y - 29, "WAVE");
}
if (global.item[13]) {
    draw_sprite(sSubScrButton, global.sbeam, x - 28, y - 19);
    draw_text(x - 20, y - 20, "SPAZER");
}
if (global.item[14]) {
    draw_sprite(sSubScrButton, global.pbeam, x - 28, y - 10);
    draw_text(x - 20, y - 11, "PLASMA");
}
if (drawlines) {
    if (global.curropt == 3) {
        draw_sprite_ext(sSubScrHilight, -1, x - 28, y - 46, 1, 1, 0, -1, halpha);
        draw_line(x + 34, y - 44, x + 50, y - 44);
        draw_line(x + 50, y - 44, oSubScrPlayer.x - 33, oSubScrPlayer.y + 81);
        draw_sprite_ext(sSubScrItem, -1, oSubScrPlayer.x - 33, oSubScrPlayer.y + 81, 1, 1, 0, -1, 1);
    }
    if (global.curropt == 4) {
        draw_sprite_ext(sSubScrHilight, -1, x - 28, y - 37, 1, 1, 0, -1, halpha);
        draw_line(x + 34, y - 35, x + 50, y - 35);
        draw_line(x + 50, y - 35, oSubScrPlayer.x - 33, oSubScrPlayer.y + 81);
        draw_sprite_ext(sSubScrItem, -1, oSubScrPlayer.x - 33, oSubScrPlayer.y + 81, 1, 1, 0, -1, 1);
    }
    if (global.curropt == 5) {
        draw_sprite_ext(sSubScrHilight, -1, x - 28, y - 28, 1, 1, 0, -1, halpha);
        draw_line(x + 34, y - 26, x + 50, y - 26);
        draw_line(x + 50, y - 26, oSubScrPlayer.x - 33, oSubScrPlayer.y + 81);
        draw_sprite_ext(sSubScrItem, -1, oSubScrPlayer.x - 33, oSubScrPlayer.y + 81, 1, 1, 0, -1, 1);
    }
    if (global.curropt == 6) {
        draw_sprite_ext(sSubScrHilight, -1, x - 28, y - 19, 1, 1, 0, -1, halpha);
        draw_line(x + 34, y - 17, x + 50, y - 17);
        draw_line(x + 50, y - 17, oSubScrPlayer.x - 33, oSubScrPlayer.y + 81);
        draw_sprite_ext(sSubScrItem, -1, oSubScrPlayer.x - 33, oSubScrPlayer.y + 81, 1, 1, 0, -1, 1);
    }
    if (global.curropt == 7) {
        draw_sprite_ext(sSubScrHilight, -1, x - 28, y - 10, 1, 1, 0, -1, halpha);
        draw_line(x + 34, y - 8, x + 50, y - 8);
        draw_line(x + 50, y - 8, oSubScrPlayer.x - 33, oSubScrPlayer.y + 81);
        draw_sprite_ext(sSubScrItem, -1, oSubScrPlayer.x - 33, oSubScrPlayer.y + 81, 1, 1, 0, -1, 1);
    }
} // if (drawlines)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
