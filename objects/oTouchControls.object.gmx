<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>device_screen_size = sqrt(power(display_get_width() / display_get_dpi_x(), 2) + power(display_get_height() / display_get_dpi_y(), 2));
draw = 0;
st_radius = display_get_height() / 4;
st_offset = st_radius + 25;
gui_x[0] = st_offset;
gui_y[0] = display_get_height() - st_offset;
gui_x[1] = display_get_width() - st_offset;
gui_y[1] = display_get_height() - st_offset;
stick_x[0] = gui_x[0];
stick_y[0] = gui_y[0];
stick_x[1] = gui_x[1];
stick_y[1] = gui_y[1];
st_pressed[0] = -1;
st_pressed[1] = -1;
vdir = 0;
vdist = 0;
rdist = 0;
mx = 0;
my = 0;
joyx = 0;
joyy = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var tx, ty;
gui_x[0] = st_offset;
gui_y[0] = display_get_gui_height() - st_offset;
gui_x[1] = display_get_gui_width() - st_offset;
gui_y[1] = display_get_gui_height() - st_offset;
stick_x[0] = gui_x[0];
stick_y[0] = gui_y[0];
joyx = 0;
joyy = 0;
if (st_pressed[0] == -1) {
    for (i = 0; i &lt; 5; i += 1) {
        if (device_mouse_check_button(i, 1)) {
            tx = scr_mouse_gui_x(device_mouse_raw_x(i));
            ty = scr_mouse_gui_y(device_mouse_raw_y(i));
            if (point_distance(tx, ty, gui_x[0], gui_y[0]) &lt; st_radius) {
                if (st_pressed[1] != i) {
                    st_pressed[0] = i;
                    break;
                }
            }
        }
    }
}
if (device_mouse_check_button(st_pressed[0], 1)) {
    mx = scr_mouse_gui_x(device_mouse_raw_x(st_pressed[0]));
    my = scr_mouse_gui_y(device_mouse_raw_y(st_pressed[0]));
    vdist = min(st_radius, point_distance(mx, my, gui_x[0], gui_y[0]));
    rdist = vdist / st_radius;
    vdir = point_direction(gui_x[0], gui_y[0], mx, my);
    stick_x[0] = gui_x[0] + lengthdir_x(vdist, vdir);
    stick_y[0] = gui_y[0] + lengthdir_y(vdist, vdir);
    joyx = lengthdir_x(rdist, vdir);
    joyy = lengthdir_y(rdist, vdir);
} else st_pressed[0] = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>btn_width = display_get_height() / 4;
btn_height = display_get_height() / 4;
btn_y = display_get_gui_height() - btn_height - 16;
btn_x = display_get_gui_width() - 16;
btn_jump_x = btn_x - btn_width * 2 - 20;
btn_fire_x = btn_x - btn_width;
btn_missile_y = btn_y - btn_height - 20;
vkey_jump = virtual_key_add(btn_jump_x, btn_y, btn_width, btn_height, 88);
vkey_fire = virtual_key_add(btn_fire_x, btn_y, btn_width, btn_height, 90);
vkey_missile = virtual_key_add(btn_fire_x, btn_missile_y, btn_width, btn_height, 65);
vkey_pause = virtual_key_add(0, 0, btn_width, btn_height, 13);
vkey_debug = virtual_key_add(btn_fire_x, 0, btn_width, btn_height, 121);
virtual_key_show(vkey_jump);
virtual_key_show(vkey_fire);
virtual_key_show(vkey_missile);
virtual_key_show(vkey_pause);
draw = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (draw == 1) {
    draw_set_color(c_white);
    draw_set_alpha(0.8);
    draw_rectangle(btn_jump_x, btn_y, btn_jump_x + btn_width, btn_y + btn_height, true);
    draw_rectangle(btn_fire_x, btn_y, btn_fire_x + btn_width, btn_y + btn_height, true);
    draw_set_alpha(0.75);
    draw_circle_color(gui_x[0], gui_y[0], st_radius, c_lime, c_lime, 1);
    draw_circle_color(stick_x[0], stick_y[0], 50, c_lime, c_lime, 1);
    draw_set_alpha(0.25);
    draw_circle_color(gui_x[0], gui_y[0], st_radius, c_lime, c_lime, 0);
    draw_circle_color(stick_x[0], stick_y[0], 50, c_lime, c_lime, 0);
    draw_set_alpha(1);
    draw_text(x, y, string(joyx));
    draw_text(x, y + 16, string(joyy));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="121">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.ingame) {
    global.targetx = 48;
    global.targety = 1392;
    get_loadout(3);
    global.lavastate = 6;
    room_goto(rm_a0h11);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>game_end();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
