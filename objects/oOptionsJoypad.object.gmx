<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.curropt = 1;
lastitem = 17;
active = 0;
alarm[0] = 5;
i = 0;
repeat (18) {
    canedit[i] = 1;
    i += 1;
}
if (global.opaimstyle == 0) canedit[8] = 0;
targety = 0;
view_object[0] = id;
editing = 0;
readjoy = 0;
timer = 0;
event_user(0);
with (oSS_Control) active = 0;
with (oSS_Fg) {
    active = 0;
    hidechangetip = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_user(1);
with (oSS_Fg) hidechangetip = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (editing) {
    editing = 0;
    op[global.curropt].editing = 0;
    sfx_play(sndMenuMove);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>readjoy = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>active = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (active) {
    if (oControl.kDown &gt; 0 &amp;&amp; (oControl.kDownPushedSteps == 0 || oControl.kDownPushedSteps &gt; 30 &amp;&amp; timer == 0) &amp;&amp; editing == 0) {
        global.curropt += 1;
        if (global.curropt &gt; lastitem) global.curropt = 1;
        while (canedit[global.curropt] == 0) global.curropt += 1;
        if (global.curropt &gt; lastitem) global.curropt = 1;
        targety = op[global.curropt].y + 8;
        if (targety &gt; 336) targety = 336;
        sfx_play(sndMenuMove);
        global.tiptext = tip[global.curropt];
    }
    if (oControl.kUp &gt; 0 &amp;&amp; (oControl.kUpPushedSteps == 0 || oControl.kUpPushedSteps &gt; 30 &amp;&amp; timer == 0) &amp;&amp; editing == 0) {
        global.curropt -= 1;
        if (global.curropt &lt; 1) global.curropt = lastitem;
        while (canedit[global.curropt] == 0) global.curropt -= 1;
        if (global.curropt &lt; 1) global.curropt = lastitem;
        targety = op[global.curropt].y + 8;
        if (targety &gt; 320) targety = 320;
        sfx_play(sndMenuMove);
        global.tiptext = tip[global.curropt];
    }
    if ((oControl.kLeft &gt; 0 &amp;&amp; oControl.kLeftPushedSteps == 0 || oControl.kRight &gt; 0 &amp;&amp; oControl.kRightPushedSteps == 0) &amp;&amp; oControl.kDown == 0 &amp;&amp; oControl.kUp == 0) {
        if (global.curropt == 0) {
            global.openablejoy = !global.openablejoy;
            sfx_play(sndMenuMove);
            event_user(2);
        }
        if (global.curropt == 2) {
            global.opanalogwalk = !global.opanalogwalk;
            sfx_play(sndMenuMove);
            event_user(2);
        }
    }
    if (oControl.kLeft &gt; 0 &amp;&amp; oControl.kLeftPushedSteps &gt; 5 &amp;&amp; oControl.kDown == 0 &amp;&amp; oControl.kUp == 0) {
        if (global.curropt == 1 &amp;&amp; global.opdeadzone &gt; 0) {
            global.opdeadzone -= 1;
            event_user(2);
        }
    }
    if (oControl.kRight &gt; 0 &amp;&amp; oControl.kRightPushedSteps &gt; 5 &amp;&amp; oControl.kDown == 0 &amp;&amp; oControl.kUp == 0) {
        if (global.curropt == 1 &amp;&amp; global.opdeadzone &lt; 100) {
            global.opdeadzone += 1;
            event_user(2);
        }
    }
    if (oControl.kMenu1 &amp;&amp; oControl.kMenu1PushedSteps == 0 &amp;&amp; canedit[global.curropt] &amp;&amp; global.curropt &lt;= 15 &amp;&amp; global.curropt &gt; 2 &amp;&amp; editing == 0) {
        if (editing == 0) {
            editing = 1;
            alarm[2] = 300;
            io_clear();
            readjoy = 0;
            if (global.joydetected) alarm[1] = 20;
            op[global.curropt].editing = 1;
            sfx_play(sndMenuSel);
        }
    }
    if (oControl.kMenu1 &amp;&amp; oControl.kMenu1PushedSteps == 0) {
        if (global.curropt == 16) {
            set_default_joypad();
            event_user(2);
            sfx_play(sndMenuSel);
        }
        if (global.curropt == 17) {
            save_gameoptions();
            view_object[0] = noone;
            view_yview[0] = 0;
            instance_create(50, 92, oOptionsControl);
            instance_destroy();
            sfx_play(sndMenuSel);
        }
    }
    if (editing &amp;&amp; readjoy) {
        if (global.curropt == 3 &amp;&amp; choose_axis() != -1) {
            remap_duplicate_joyaxis(choose_axis());
            map_joyaxisbtn(global.curropt, choose_axis());
            if (global.opjoybtn_xax == 6) global.opjoybtn_yax = 7;
            editing = 0;
            readjoy = 0;
            op[global.curropt].editing = 0;
            event_user(2);
            sfx_play(sndMenuMove);
        }
        if (global.curropt == 4 &amp;&amp; choose_axis() != -1) {
            remap_duplicate_joyaxis(choose_axis());
            map_joyaxisbtn(global.curropt, choose_axis());
            if (choose_axis() == 6) {
                global.opjoybtn_xax = 6;
                global.opjoybtn_yax = 7;
            }
            editing = 0;
            readjoy = 0;
            op[global.curropt].editing = 0;
            event_user(2);
            sfx_play(sndMenuMove);
        }
        if (check_joybtn(global.opjoyid) &gt; 0 &amp;&amp; global.curropt &gt; 3) {
            if (global.curropt &lt; 13 || global.curropt == 13 &amp;&amp; global.opjoybtn_menu1 != check_joybtn(global.opjoyid) &amp;&amp; global.opjoybtn_menu2 != check_joybtn(global.opjoyid)) {
                remap_duplicate_joybtn(check_joybtn(global.opjoyid));
                map_joyaxisbtn(global.curropt, check_joybtn(global.opjoyid));
            } else if (global.curropt &gt; 13 &amp;&amp; global.opjoybtn_str != check_joybtn(global.opjoyid)) {
                remap_duplicate_joybtnmenu(check_joybtn(global.opjoyid));
                map_joyaxisbtn(global.curropt, check_joybtn(global.opjoyid));
            }
            editing = 0;
            readjoy = 0;
            op[global.curropt].editing = 0;
            event_user(2);
            sfx_play(sndMenuMove);
            active = 0;
            alarm[0] = 2;
        }
    } // if (editing &amp;&amp; readjoy)
    with (oSS_Fg) {
        active = 0;
        alarm[0] = 5;
    }
    with (oSS_Control) {
        active = 0;
        alarm[0] = 5;
    }
} // if (active)
if (targety != y) y += (targety - y) / 10;
timer -= 1;
if (timer &lt; 0) timer = 8;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>op[1].slwidth = global.opdeadzone / 100 * op[1].w;
if (global.opanalogwalk) {
    op[2].optext = "Enabled";
} else op[2].optext = "Disabled";
op[3].optext = get_joyaxisname(global.opjoybtn_xax);
op[4].optext = get_joyaxisname(global.opjoybtn_yax);
op[5].optext = "Button " + string(global.opjoybtn_a);
op[6].optext = "Button " + string(global.opjoybtn_b);
op[7].optext = "Button " + string(global.opjoybtn_l);
op[8].optext = "Button " + string(global.opjoybtn_l2);
op[9].optext = "Button " + string(global.opjoybtn_r2);
op[10].optext = "Button " + string(global.opjoybtn_x);
op[11].optext = "Button " + string(global.opjoybtn_r);
op[12].optext = "Button " + string(global.opjoybtn_sel);
op[13].optext = "Button " + string(global.opjoybtn_str);
op[14].optext = "Button " + string(global.opjoybtn_menu1);
op[15].optext = "Button " + string(global.opjoybtn_menu2);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (op[1]) instance_destroy();
with (op[2]) instance_destroy();
with (op[3]) instance_destroy();
with (op[4]) instance_destroy();
with (op[5]) instance_destroy();
with (op[6]) instance_destroy();
with (op[7]) instance_destroy();
with (op[8]) instance_destroy();
with (op[9]) instance_destroy();
with (op[10]) instance_destroy();
with (op[11]) instance_destroy();
with (op[12]) instance_destroy();
with (op[13]) instance_destroy();
with (op[14]) instance_destroy();
with (op[15]) instance_destroy();
with (op[16]) instance_destroy();
with (op[17]) instance_destroy();
with (op[50]) instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sep = 16;
i = 0;
op[50] = instance_create(x, y, oMenuLabel);
op[50].text = get_text("OptionsControlJoypad", "Title_Joypad");
op[1] = instance_create(x, y + sep, oOptionSlider);
op[1].label = get_text("OptionsControlJoypad", "Deadzone");
op[1].optionid = 1;
tip[1] = get_text("OptionsControlJoypad", "Deadzone_Tip");
op[2] = instance_create(x, y + sep * 2, oOptionLR);
op[2].label = get_text("OptionsControlJoypad", "AnalogWalking");
op[2].optionid = 2;
tip[2] = get_text("OptionsControlJoypad", "AnalogWalking_Tip");
op[3] = instance_create(x, y + sep * 3, oOptionLR);
op[3].label = get_text("OptionsControlJoypad", "XAxis");
op[3].optionid = 3;
tip[3] = get_text("OptionsControlJoypad", "XAxis_Tip");
op[4] = instance_create(x, y + sep * 4, oOptionLR);
op[4].label = get_text("OptionsControlJoypad", "YAxis");
op[4].optionid = 4;
tip[4] = get_text("OptionsControlJoypad", "YAxis_Tip");
op[5] = instance_create(x, y + sep * 6, oOptionLR);
op[5].label = get_text("OptionsControlCommands", "Jump");
op[5].optionid = 5;
tip[5] = get_text("OptionsControlJoypad", "Jump_Tip");
op[6] = instance_create(x, y + sep * 7, oOptionLR);
op[6].label = get_text("OptionsControlCommands", "Fire");
op[6].optionid = 6;
tip[6] = get_text("OptionsControlJoypad", "Fire_Tip");
op[7] = instance_create(x, y + sep * 8, oOptionLR);
if (global.opaimstyle == 0) {
    op[7].label = get_text("OptionsControlCommands", "DiagonalAim");
    tip[7] = get_text("OptionsControlJoypad", "DiagonalAim_Tip");
} else {
    op[7].label = get_text("OptionsControlCommands", "AimUp");
    tip[7] = get_text("OptionsControlJoypad", "AimUp_Tip");
}
op[7].optionid = 7;
i = 9;
if (global.opaimstyle == 1) {
    op[8] = instance_create(x, y + sep * i, oOptionLR);
    op[8].label = get_text("OptionsControlCommands", "AimDown");
    op[8].optionid = 8;
    tip[8] = get_text("OptionsControlJoypad", "AimDown_Tip");
    i += 1;
} else {
    op[8] = instance_create(x, y + sep * i, oOptionLR);
    op[8].label = "";
    op[8].optionid = 100;
    op[8].visible = false;
    tip[8] = "";
}
op[9] = instance_create(x, y + sep * i, oOptionLR);
op[9].label = get_text("OptionsControlCommands", "AimLock");
op[9].optionid = 9;
tip[9] = get_text("OptionsControlJoypad", "AimLock_Tip");
i += 1;
op[10] = instance_create(x, y + sep * i, oOptionLR);
op[10].label = get_text("OptionsControlCommands", "Morph");
op[10].optionid = 10;
tip[10] = get_text("OptionsControlJoypad", "Morph_Tip");
i += 1;
op[11] = instance_create(x, y + sep * i, oOptionLR);
if (global.opmslstyle == 0) {
    op[11].label = get_text("OptionsControlCommands", "ArmWeapon");
    tip[11] = get_text("OptionsControlJoypad", "ArmWeapon_Tip");
} else {
    op[11].label = get_text("OptionsControlCommands", "WeaponSelect");
    tip[11] = get_text("OptionsControlJoypad", "WeaponSelect_Tip");
}
op[11].optionid = 11;
i += 1;
op[12] = instance_create(x, y + sep * i, oOptionLR);
if (global.opmslstyle == 0) {
    op[12].label = get_text("OptionsControlCommands", "WeaponSelect");
    tip[12] = get_text("OptionsControlJoypad", "WeaponSelect_Tip");
} else {
    op[12].label = get_text("OptionsControlCommands", "WeaponCancel");
    tip[12] = get_text("OptionsControlJoypad", "WeaponCancel_Tip");
}
op[12].optionid = 12;
i += 1;
op[13] = instance_create(x, y + sep * i, oOptionLR);
op[13].label = get_text("OptionsControlCommands", "Start");
op[13].optionid = 13;
tip[13] = get_text("OptionsControlJoypad", "Start_Tip");
i += 1;
op[14] = instance_create(x, y + sep * i, oOptionLR);
op[14].label = get_text("OptionsControlCommands", "MenuAccept");
op[14].optionid = 14;
tip[14] = get_text("OptionsControlJoypad", "MenuAccept_Tip");
i += 1;
op[15] = instance_create(x, y + sep * i, oOptionLR);
op[15].label = get_text("OptionsControlCommands", "MenuBack");
op[15].optionid = 15;
tip[15] = get_text("OptionsControlJoypad", "MenuBack_Tip");
i += 1;
op[16] = instance_create(x, y + sep * i, oPauseOption);
op[16].optionid = 16;
op[16].label = get_text("GlobalOptions", "Defaults");
tip[16] = get_text("GlobalOptions", "Defaults_Tip");
i += 1;
op[17] = instance_create(x, y + sep * i, oPauseOption);
op[17].optionid = 17;
op[17].label = get_text("GlobalOptions", "Exit");
tip[17] = get_text("GlobalOptions", "ExitMain_Tip");
global.tiptext = tip[global.curropt];
event_user(2);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
